@using Skclusive.Core.Component

@inherits PureComponentBase

<input type="text"
       autofocus
       class="@Class"
       placeholder="@Placeholder"
       value="@_Text"
       @oninput="@HandleChange"
       @onkeydown="@HandleSubmit"
       @oninput:preventDefault />

@code {

    [Parameter]
    public string Placeholder { get; set; }

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public bool Editing { get; set; }

    [Parameter]
    public bool NewTodo { get; set; }

    [Parameter]
    public EventCallback<string> OnSave { get; set; }

    protected string _Text { set; get; }

    protected string Class => (Editing ? "edit " : "") + (NewTodo ? "new-todo" : "");

    protected void HandleChange(ChangeEventArgs changeEvent)
    {
        _Text = changeEvent.Value.ToString();

        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(Text))
        {
            _Text = Text;
        }
    }

    protected void HandleSubmit(KeyboardEventArgs keyboardEvent)
    {
        if (keyboardEvent.Key == "Enter")
        {
            OnSave.InvokeAsync(_Text);

            if (NewTodo)
            {
                _Text = "";

                StateHasChanged();
            }
        }
    }

    //protected void HandleBlur(FocusEventArgs focusEvent)
    //{
    //    if (!NewTodo)
    //    {
    //        OnSave.InvokeAsync(_Text);
    //    }
    //}
}
